server.port=9100
#spring.data.mongodb.uri=mongodb+srv://9559surajsonu:3CS2Lwba4QcvZp06@cluster0.zqewrqa.mongodb.net/
#spring.datasource.url=jdbc:mysql://hostname:3306/localTesting
#  # jdbc:postgresql://localhost:5432/demo
#spring.datasource.username=mysql
#spring.datasource.password=

spring.main.banner-mode=off
#
#jedis.port:1234
#jedis.host:localhost
#
#spring.redis.host=cl
##Redis port
#spring.redis.port=6379
##Redis database number
#spring.redis.database=0
##Redis password
#spring.redis.password=BG
##Redis read/write timeout
#spring.redis.timeout=2000
##Whether to enable connection pooling
#spring.redis.jedis.pool.enabled=true
##Minimum connections in the pool
#spring.redis.jedis.pool.min-idle=50
##Maximum idle connections in the pool
#spring.redis.jedis.pool.max-idle=200
##Maximum connections in the pool
#spring.redis.jedis.pool.max-active=200
##Maximum amount of time a connection allocation should block before throwing an exception when the pool is exhausted. The default value -1 indicates to wait indefinitely.
#spring.redis.jedis.pool.max-wait=3000
##Interval for checking and evicting idle connection. Default: 60s.
#spring.redis.jedis.pool.time-between-eviction-runs=60S




#########################   KAFKA properties ##################

#spring.kafka.consumer.bootstrap-servers= 0.0.0.0:9092
#spring.kafka.consumer.group-id= myg
#spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.auto-offset-reset= earliest
#
#spring.kafka.producer.bootstrap-servers= 0.0.0.0:9092
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer
